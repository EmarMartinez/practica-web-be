{
	"SECTION 1": "-----------------------------------------------------------------------------------------------------------------",
	"SEQUELIZE LOADER": "/loaders/sequelize.loader.js",
	"Connecting to {{dbName}} database": "Conectando con la base de datos {{dbName}}",
	"{{dbName}} connection has been established successfully": "La conexión con {{dbName}} ha sido establecida con éxito",
	"Creating models associations...": "Creando las asociaciones de modelos...",
	"All models were successfully associated": "Todos los modelos fueron asociados con éxito",
	"Syncing models with database...": "Sincronizando los modelos con la base de datos...",
	"Models successfully synced": "Modelos asociados con éxito",
	"Tenant '{{tenantName}}' not found in DB. Skipping...": "Tenant '{{tenantName}}' no encontrado en base de datos. Omitiendo...",
	"Creating in tenant '{{tenantName}}'": "Creando en el tenant '{{tenantName}}'",
	"Updating in tenant '{{tenantName}}'": "Actualizando en el tenant '{{tenantName}}'",
	"Tenants models successfully synced": "Modelos de tenants asociados con éxito",
	"Error loading {{dbName}} database'": "Error al cargar la base de datos {{dbName}}",
	"Closing {{dbName}} database connection": "Cerrando la conexión con la base de datos {{dbName}}",
	"{{dbName}} database connection closed": "Conexión cerrada con la base de datos {{dbName}}",
	"Data for '{{resourceName}}' successfully created": "Los datos de '{{resourceName}}' fueron creados con éxito",
	"Associations for '{{resourceName}}' successfully created": "Las asociaciones para '{{resourceName}}' fueron creadas con éxito",
	"Schema {{schema}} created": "Schema {{schema}} creado",
	"Schema {{schema}} dropped": "Schema {{schema}} eliminado",
	"SECTION 2": "-----------------------------------------------------------------------------------------------------------------",
	"APP FACTORY": "/factories/app.factory.js",
	"Pipe": "Pipe",
	"Port": "Puerto",
	"{{bind}} requires elevated privileges": "{{bind}} requiere privilegios elevados",
	"{{bind}} is already in use": "{{bind}} está ya en uso",
	"Server listening on {{bind}}": "Servidor escuchando en el {{bind}}",
	"SECTION 3": "-----------------------------------------------------------------------------------------------------------------",
	"JWT MIDDLEWARE": "/middlewares/jwt.middleware.js",
	"API JWT authentication is disabled": "La autenticación por JWT de la API está deshabilitada",
	"Endpoint {{path}} is whitelisted": "La ruta {{path}} está en la lista blanca",
	"Skipping JWT validation": "Saltando la validación del JWT",
	"User {{username}} not found": "Usuario {{username}} no encontrado",
	"User validated:": "Usuario validado:",
	"Token not provided": "Token no recibido",
	"Tenant not provided": "Tenant no recibido",
	"Invalid authorization type": "Tipo de autorización no válido",
	"Invalid credentials": "Credenciales no válidas",
	"Invalid token": "Token no válido",
	"SECTION 4": "-----------------------------------------------------------------------------------------------------------------",
	"BASE CRUD CONTROLLER": "/shared/layers/base/base-crud.controller.js",
	"{entity} {id} not {GENDER, select, male {found} female {found} other {found}}": "{entity} {id} no {GENDER, select, male {encontrado} female {encontrada} other {encontrado}}",
	"{entity} {id} already exists": "{entity} {id} ya existe",
	"{entity} {id} was successfully {GENDER, select, male {created} female {created} other {created}}": "{entity} {id} {GENDER, select, male {creado} female {creada} other {creado}} con éxito",
	"{entities} were successfully {GENDER, select, male {created} female {created} other {created}} in bulk": "{entities} {GENDER, select, male {creados} female {creadas} other {creados}} en lote con éxito",
	"{entities} were successfully {GENDER, select, male {updated} female {updated} other {updated}} in bulk": "{entities} {GENDER, select, male {actualizados} female {actualizadas} other {actualizados}} en lote con éxito",
	"{entity} {id} was successfully {GENDER, select, male {updated} female {updated} other {updated}}": "{entity} {id} {GENDER, select, male {actualizado} female {actualizada} other {actualizado}} con éxito",
	"{entity} {id} was successfully {GENDER, select, male {deleted} female {deleted} other {deleted}}": "{entity} {id} {GENDER, select, male {eliminado} female {eliminada} other {eliminado}} con éxito",
	"{entity} {id} was successfully {GENDER, select, male {authenticated} female {authenticated} other {authenticated}}": "{entity} {id} {GENDER, select, male {autenticado} female {autenticada} other {autenticado}} con éxito",
	"{entity} {id} was successfully {GENDER, select, male {validated} female {validated} other {validated}}": "{entity} {id} {GENDER, select, male {validado} female {validada} other {validado}} con éxito",
	"{GENDER, select, male {No} female {No} other {No}} {entity} matches query criteria": "{GENDER, select, male {Ningún} female {Ninguna} other {Ningún}} {entity} coincide con los criterios de consulta",
	"SECTION 5": "-----------------------------------------------------------------------------------------------------------------",
	"VALIDATIONS CONFIG": "/config/validations.config.js",
	"Field '{{field}}' cannot be null": "El campo '{{field}}' no  puede ser nulo",
	"Field '{{field}}' must be an email": "El campo '{{field}}' debe ser un email",
	"Field '{{field}}' must be an integer": "El campo '{{field}}' debe ser un número entero",
	"Field '{{field}}' must be a decimal number": "El campo '{{field}}' debe ser un número decimal",
	"Field '{{field}}' must be a number": "El campo '{{field}}' debe ser un número",
	"Field '{{field}}' must only contain letters without special characters": "El campo '{{field}}' sólo puede contener letras sin carácteres especiales",
	"Field '{{field}}' must be a date": "El campo '{{field}}' debe ser una fecha",
	"Field '{{field}}' must be boolean": "El campo '{{field}}' debe ser booleano",
	"Field '{{field}}' must only contain letters": "El campo '{{field}}' sólo puede contener letras",
	"Field '{{field}}' must be one of these: {{args}}": "El campo '{{field}}' debe ser uno de los siguientes: {{args}}",
	"Field '{{field}}' must be lower than or equal to {{args}}": "El campo '{{field}}' debe ser menor o igual que {{args}}",
	"Field '{{field}}' must be greater than or equal to {{args}}": "El campo '{{field}}' debe ser mayor o igual que {{args}}",
	"Field '{{field}}' must be UUIDV4": "El campo '{{field}}' debe ser UUIDV4",
	"Field '{{field}}' must be UUIDV1": "El campo '{{field}}' debe ser UUIDV1",
	"SECTION 6": "-----------------------------------------------------------------------------------------------------------------",
	"API RESOURCES": "/shared/layers/base/base-crud.controller.js",
	"User": "Usuario",
	"Tenant": "Tenant"
}